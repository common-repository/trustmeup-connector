{"version":3,"sources":["webpack:///./assets/js/src/utils/context.js","webpack:///./assets/js/src/utils/utils.js","webpack:///./assets/js/src/components/Header.js","webpack:///./assets/js/src/components/LoadingIndicator.js","webpack:///./assets/js/src/components/Section.js","webpack:///./assets/js/src/components/ConnectorPopupContent.js","webpack:///./assets/js/src/utils/ajax.js","webpack:///./assets/js/src/components/ConnectedProductsTable.js","webpack:///./assets/js/src/tabs/Overview.js","webpack:///./assets/js/src/tabs/Settings.js","webpack:///./assets/js/src/components/Debug.js","webpack:///./assets/js/src/components/Tabs.js","webpack:///./assets/js/src/AdminPage.js","webpack:///./assets/js/admin.js"],"names":["defaultContext","fields","window","TrustMeUp","data","isLoading","notice","message","success","error","warning","updateField","setLoading","displayNotice","AppContext","createContext","ContextContainer","children","useState","updateFields","setNotice","hideNotice","previousNotice","useEffect","hider","setTimeout","clearTimeout","Provider","value","name","previousFields","type","useAppState","useContext","i18n","slug","context","strings","Notice","status","className","onDismiss","hot","size","label","title","subtitle","transparent","edgy","Header","SubHeader","Section","selectProduct","selectAllAvailableProducts","selection","search","setSearch","products","setProducts","categorieSearch","setCategorieSearch","woo_products","filter","wooProduct","toLowerCase","includes","console","log","categories","map","p","id","mt","variant","onClick","placeholder","prefix","suffix","length","onChange","e","target","index","isSelected","isSelectedElsewhere","connected_woo_products_ids","discount","connected_tmu_product","connected_products","find","cp","synced_with","s","key","src","thumbnail","alt","doAjaxCall","action","a","axios","post","api","rest_url","headers","nonce","timeout","then","response","Promise","resolve","reject","ajax","payload","refreshProducts","resyncProducts","disconnectProducts","connectProduct","product_id","trustmeup_product","disconnectProduct","product","saveFields","useModal","getActivatorProps","getModalProps","productToConnect","setProductToConnect","updateSelection","connectProducts","onClose","result","onDisconnectSingleClick","Row","header","HeaderCell","Cell","colSpan","pp","confirm","href","permalink","disabled","color","Icon","as","AddCircle","mr","preventDefault","Edit","maxWidth","showCloseButton","Content","newSelection","iid","onRefreshClick","flat","onResyncClick","onDisconnectAllClick","api_client_id","api_password","api_client_id_beta","api_password_beta","hasSetApiCredentials","align","LinkOff","CloudDownload","props","dark","code","JSON","stringify","undefined","onApiCredentialsSaveClick","api_environment","merchant_token","checked","dangerouslySetInnerHTML","__html","width","mutedOutline","tabsList","component","Overview","Settings","initialTabIndex","findIndex","tab","current_tab","useTabs","tabs","content","tabIndex","setTabIndex","selected","onSelect","fitted","i","TabContent","document","querySelector","addEventListener","render"],"mappings":"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","file":"admin_js/admin-6b68c6c6.js","sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\n\nconst defaultContext = {\n  fields: {\n    ...window.TrustMeUp.data.fields,\n  },\n  isLoading: false,\n  notice: {\n    message: null,\n    success: false,\n    error: false,\n    warning: false,\n  },\n  updateField: () => {},\n  setLoading: () => {},\n  displayNotice: () => {},\n};\n\nexport const AppContext = createContext(defaultContext);\n\nexport const ContextContainer = ({ children }) => {\n  const [fields, updateFields] = useState(defaultContext.fields);\n  const [isLoading, setLoading] = useState(defaultContext.isLoading);\n  const [notice, setNotice] = useState(defaultContext.notice);\n\n  // Update a specific field in our global state.\n  const updateField = (name, value) => {\n    updateFields((previousFields) => ({\n      ...previousFields,\n      [name]: value,\n    }));\n  };\n\n  // Display a notice message at the top of the page.\n  const displayNotice = (message, type = \"success\") => {\n    setNotice((previousNotice) => ({\n      ...defaultContext.notice,\n      message,\n      [type]: true,\n    }));\n  };\n\n  // Hide notice by resetting it.\n  const hideNotice = () => {\n    setNotice((previousNotice) => defaultContext.notice);\n  };\n\n  // Auto-hide notice after 5s.\n  useEffect(() => {\n    const hider = setTimeout(hideNotice, 7000);\n\n    return () => {\n      clearTimeout(hider);\n    };\n  }, [notice.message]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        // State.\n        fields: fields,\n        isLoading: isLoading,\n        notice: notice,\n\n        // Actions.\n        updateField: updateField,\n        setLoading: setLoading,\n        displayNotice: displayNotice,\n        hideNotice: hideNotice,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppState = () => useContext(AppContext);\n","import { useAppState } from \"./context\";\n\n/**\n * Get a translatable string.\n */\nexport const i18n = (slug, context = null) => {\n  if (context) {\n    slug = `${context}.${slug}`;\n  }\n\n  return window.TrustMeUp.strings[slug] ? window.TrustMeUp.strings[slug] : \"\";\n};\n\n/**\n * Get a specific field value coming from the database.\n */\nexport const getField = (name, defaultValue = \"\") => {\n  return window.TrustMeUp.data.fields[name]\n    ? window.TrustMeUp.data.fields[name]\n    : defaultValue;\n};\n\n/**\n * Are TrustMeUp API credentials set?\n */\nexport const hasSetApiCredentials = (fields) => {\n  return (\n    (fields.api_client_id !== \"\" && fields.api_password !== \"\") ||\n    (fields.api_client_id_beta !== \"\" && fields.api_password_beta !== \"\")\n  );\n};\n","import { hot } from \"react-hot-loader/root\";\nimport React, { useEffect } from \"react\";\nimport { i18n } from \"../utils/utils\";\nimport { Snackbar } from \"@sparkpost/matchbox\";\nimport { useAppState } from \"../utils/context\";\n\nconst Notice = () => {\n  const { notice, hideNotice } = useAppState();\n\n  if (!notice.message) {\n    return null;\n  }\n\n  let status = \"success\";\n\n  if (notice.error) status = \"error\";\n  if (notice.warning) status = \"warning\";\n\n  return (\n    <Snackbar\n      className=\"feedback-notice\"\n      status={status}\n      onDismiss={hideNotice}\n    >\n      {notice.message}\n    </Snackbar>\n  );\n};\n\nconst Header = () => {\n  return (\n    <header className=\"settings-page-header\">\n      <h1 className=\"wp-heading-inline\">{i18n(\"Global.PageTitle\")}</h1>\n      <Notice />\n    </header>\n  );\n};\n\nexport default hot(Header);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport { i18n } from \"../utils/utils\";\nimport { useAppState } from \"../utils/context\";\nimport { Spinner } from \"@sparkpost/matchbox\";\n\nconst LoadingIndicator = () => {\n  const { isLoading } = useAppState();\n\n  if (!isLoading) {\n    return null;\n  }\n\n  return (\n    <div className=\"loader\">\n      <Spinner size=\"large\" label=\"Loading...\" />\n    </div>\n  );\n};\n\nexport default hot(LoadingIndicator);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport { Panel } from \"@sparkpost/matchbox\";\n\nconst Section = ({\n  title,\n  subtitle,\n  transparent = false,\n  edgy = false,\n  children,\n  className = false,\n}) => {\n  return (\n    <Panel\n      className={`section${className ? ` ${className}` : \"\"}${\n        transparent ? \" transparent\" : \"\"\n      }${edgy ? \" edgy\" : \"\"}`}\n    >\n      {title && <Panel.Header>{title}</Panel.Header>}\n      {subtitle && <Panel.SubHeader>{subtitle}</Panel.SubHeader>}\n      <Panel.Section className=\"section-children\">{children}</Panel.Section>\n    </Panel>\n  );\n};\n\nexport default hot(Section);\n","import { hot } from \"react-hot-loader/root\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextField } from \"@sparkpost/matchbox\";\nimport { i18n } from \"../utils/utils\";\nimport { useAppState } from \"../utils/context\";\nimport { Search } from \"@sparkpost/matchbox-icons\";\n\nconst ConnectorPopupContent = ({\n  selectProduct,\n  selectAllAvailableProducts,\n  selection,\n}) => {\n  const { fields } = useAppState();\n  const [search, setSearch] = useState(\"\");\n  const [products, setProducts] = useState([]);\n  const [categorieSearch, setCategorieSearch] = useState(\"\");\n\n  useEffect(() => {\n    setProducts(\n      window.TrustMeUp.data.fields.woo_products.filter((wooProduct) => {\n        if (search === \"\" && categorieSearch === \"\") {\n          return true;\n        } else if(categorieSearch === \"\" && search !== \"\"){\n          return wooProduct.name.toLowerCase().includes(search.toLowerCase());\n        }else if ( search === \"\"  && categorieSearch !== \"\" ){\n          console.log(wooProduct.categories.map(p => p.toLowerCase()))\n          return wooProduct.categories.map(p => p.toLowerCase()).includes(categorieSearch.toLowerCase());\n        }\n      })\n    );\n  }, [, search, categorieSearch]);  \n\n  return (\n    <div id=\"search-widget-container\">\n      <div className=\"instructions\">\n        <p>{i18n(\"Text.ConnectorPopupMultipleDesc\")}</p>\n        <Button\n          size=\"small\"\n          mt=\"400\"\n          variant=\"outline\"\n          onClick={selectAllAvailableProducts}\n        >\n          {i18n(\"Button.SelectAllAvailable\")}\n        </Button>\n        <ul className=\"products-legend\">\n          <li className=\"title\">{i18n(\"Text.Legend\")}</li>\n          <li className=\"legend-item already-connected\">\n            {i18n(\"Text.LegendAlreadyConnected\")}\n          </li>\n          <li className=\"legend-item connected-with-other\">\n            {i18n(\"Text.LegendConnectedWithOther\")}\n          </li>\n          <li className=\"legend-item available\">\n            {i18n(\"Text.LegendAvailable\")}\n          </li>\n        </ul>\n      </div>\n      <div className=\"widget\">\n        <div className=\"search-section\">\n        <TextField\n            id=\"categorieSearch\"\n            label={null}\n            placeholder={i18n(\"Field.CategoriesProducts\")}\n            name=\"categorieSearch\"\n            value={categorieSearch}\n            prefix={<Search size={24} />}\n            suffix={\n              categorieSearch !== \"\" && (\n                <span className=\"search-stats\">\n                  {products.length} /{\" \"}\n                  {window.TrustMeUp.data.fields.woo_products.length}\n                </span>\n              )\n            }\n            onChange={(e) => {\n              setSearch(\"\")\n              return setCategorieSearch(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"search-section\">\n          <TextField\n            id=\"search\"\n            label={null}\n            placeholder={i18n(\"Field.SearchProducts\")}\n            name=\"search\"\n            value={search}\n            prefix={<Search size={24} />}\n            suffix={\n              search !== \"\" && (\n                <span className=\"search-stats\">\n                  {products.length} /{\" \"}\n                  {window.TrustMeUp.data.fields.woo_products.length}\n                </span>\n              )\n            }\n            onChange={(e) => {\n              setCategorieSearch(\"\")\n              return setSearch(e.target.value);\n            }}\n          />\n        </div>\n        {window.TrustMeUp.data.fields.woo_products.length === 0 && (\n          <p>{i18n(\"Text.NoWooProducts\")}</p>\n        )}\n        {search !== \"\" && products.length === 0 && (\n          <p>{i18n(\"Text.NoWooProductsAfterFilter\")}</p>\n        )}\n        {products.length > 0 && (\n          <ul className=\"woo-products\">\n            {products.map((wooProduct, index) => {\n              const isSelected = selection.includes(wooProduct.id);\n              const isSelectedElsewhere =\n                !isSelected &&\n                fields.connected_woo_products_ids.includes(wooProduct.id);\n              let discount = null;\n\n              if (isSelected || isSelectedElsewhere) {\n                const connected_tmu_product = fields.connected_products.find(\n                  (cp) =>\n                    cp.synced_with.map((s) => s.id).includes(wooProduct.id)\n                );\n\n                if (connected_tmu_product) {\n                  discount = connected_tmu_product.discount;\n                }\n              }\n\n              return (\n                <li\n                  key={`wooProduct${wooProduct.id}`}\n                  onClick={() => selectProduct(wooProduct.id)}\n                  className={`${isSelected ? \"selected\" : \"\"} ${\n                    isSelectedElsewhere ? \"selected-elsewhere\" : \"\"\n                  }`}\n                >\n                  <img src={wooProduct.thumbnail} alt={wooProduct.name} />\n                  <h6>{wooProduct.name}</h6>\n                  {discount && <span className=\"discount\">{discount}%</span>}\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default hot(ConnectorPopupContent);\n","import axios from \"axios\";\n\n/**\n * Send an AJAX call to the main plugin API route (POST).\n */\nexport const doAjaxCall = async (action, data = {}) => {\n  return axios\n    .post(\n      `${window.TrustMeUp.data.api.rest_url}trustmeup/v1/admin/${action}`,\n      data,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-WP-Nonce\": window.TrustMeUp.data.api.nonce,\n        },\n        timeout: 60 * 1000,\n      }\n    )\n    .then(\n      (response) => {\n        return Promise.resolve(response.data);\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n};\n\n/**\n * Wrapper function calling the AJAX route and returning an object based on the Promise.\n */\nexport const ajax = async (action, data = {}) => {\n  try {\n    const payload = await doAjaxCall(action, data);\n\n    return {\n      success: true,\n      ...payload,\n    };\n  } catch (error) {\n    return {\n      error: error.message,\n    };\n  }\n};\n\n/**\n * Refresh products.\n */\nexport const refreshProducts = async () => {\n  return await ajax(\"products-refresh\");\n};\n\n/**\n * Resync products.\n */\nexport const resyncProducts = async () => {\n  return await ajax(\"products-resync\");\n};\n\n/**\n * Disconnect all products.\n */\nexport const disconnectProducts = async () => {\n  return await ajax(\"products-disconnect\");\n};\n\n/**\n * Connect a TMU product to one or many Woo products.\n */\nexport const connectProduct = async (product_id, selection = []) => {\n  return await ajax(\"products-connect\", {\n    trustmeup_product: product_id,\n    woo_products: selection,\n  });\n};\n\n/**\n * Disconnect single product.\n */\nexport const disconnectProduct = async (product_id) => {\n  return await ajax(\"products-disconnect\", { product: product_id });\n};\n\n/**\n * Save basic fields in an option.\n */\nexport const saveFields = async (fields) => {\n  return await ajax(\"fields-save\", { fields });\n};\n","import { hot } from \"react-hot-loader/root\";\nimport React, { useState, useEffect } from \"react\";\nimport { i18n } from \"../utils/utils\";\nimport { Table, Button, useModal, Modal } from \"@sparkpost/matchbox\";\nimport { LinkOff, AddCircle, Edit } from \"@sparkpost/matchbox-icons\";\nimport ConnectorPopupContent from \"./ConnectorPopupContent\";\nimport { useAppState } from \"../utils/context\";\nimport { connectProduct, disconnectProduct } from \"../utils/ajax\";\n\nconst ConnectedProductsTable = ({ search }) => {\n  const { fields, isLoading, setLoading, displayNotice, updateField } =\n    useAppState();\n  const { getActivatorProps, getModalProps } = useModal();\n  const [productToConnect, setProductToConnect] = useState(null);\n  const [selection, updateSelection] = useState([]);\n\n  useEffect(() => {\n    updateSelection(\n      productToConnect ? productToConnect.synced_with.map((p) => p.id) : []\n    );\n  }, [productToConnect]);\n\n  /**\n   * Select or un-select a product in the popup.\n   */\n  const selectProduct = (id) => {\n    let newSelection;\n\n    // Add to selection.\n    if (!selection.includes(id)) {\n      newSelection = [...selection, id];\n    }\n\n    // Remove from selection.\n    else {\n      newSelection = selection.filter((iid) => iid !== id);\n    }\n\n    updateSelection(() => newSelection);\n  };\n\n  /**\n   * Select all available products.\n   */\n  const selectAllAvailableProducts = () => {\n    updateSelection(\n      window.TrustMeUp.data.fields.woo_products\n        .filter(\n          (p) =>\n            !fields.connected_woo_products_ids.includes(p.id) ||\n            selection.includes(p.id)\n        )\n        .map((p) => p.id)\n    );\n  };\n\n  /**\n   * Save a new connection between TMU product and Woo product(s).\n   */\n  const connectProducts = async () => {\n    getModalProps().onClose();\n    setLoading(true);\n    const result = await connectProduct(productToConnect.id, selection);\n\n    if (result.message) {\n      displayNotice(\n        result.message || result.error,\n        result.success ? \"success\" : \"error\"\n      );\n    }\n\n    if (result.fields) {\n      if (result.fields.connected_products) {\n        updateField(\"connected_products\", result.fields.connected_products);\n      }\n    }\n\n    setProductToConnect(null);\n    setLoading(false);\n  };\n\n  /**\n   * When disconnecting a single product.\n   */\n  const onDisconnectSingleClick = async (product_id) => {\n    setLoading(true);\n    const result = await disconnectProduct(product_id);\n\n    if (result.message) {\n      displayNotice(\n        result.message || result.error,\n        result.success ? \"success\" : \"error\"\n      );\n    }\n\n    if (result.fields) {\n      if (result.fields.connected_products) {\n        updateField(\"connected_products\", result.fields.connected_products);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Table className=\"connected-products-table\">\n        <thead>\n          <Table.Row header>\n            <Table.HeaderCell className=\"col-name\">\n              {i18n(\"Text.TrustMeUpProduct\")}\n            </Table.HeaderCell>\n            <Table.HeaderCell className=\"col-connections\">\n              {i18n(\"Text.WooProduct\")}\n            </Table.HeaderCell>\n          </Table.Row>\n        </thead>\n        <tbody>\n          {fields.connected_products.length === 0 && (\n            <Table.Row>\n              <Table.Cell colSpan=\"2\">\n                <p className=\"empty-table-message\">\n                  {i18n(\"Text.NoConnectedProducts\")}\n                </p>\n              </Table.Cell>\n            </Table.Row>\n          )}\n          {fields.connected_products\n            .filter((p) => {\n              if (search === \"\") {\n                return true;\n              }\n\n              return (\n                p.synced_with\n                  .map((pp) => pp.name.toLowerCase())\n                  .filter((name) => name.includes(search)).length > 0\n              );\n            })\n            .map((product, p) => (\n              <Table.Row key={`pendingProductRow${p}`}>\n                <Table.Cell className=\"col-name\">\n                  <h6>\n                    <span className=\"product-name-text\">{product.name}</span>\n                  </h6>\n                  <ul className=\"meta\">\n                    <li>\n                      <span className=\"discount\">{product.discount} %</span>\n                    </li>\n                    {product.synced_with.length > 0 && (\n                      <li>\n                        <span\n                          className=\"single-disconnect link\"\n                          onClick={() => {\n                            window.confirm(\n                              `${i18n(\"Button.Disconnect\")} ${product.name}?`\n                            ) && onDisconnectSingleClick(product.id);\n                          }}\n                        >\n                          <LinkOff size=\"18\" className=\"icon\" />{\" \"}\n                          {i18n(\"Button.Disconnect\")}\n                        </span>\n                      </li>\n                    )}\n                  </ul>\n                </Table.Cell>\n                <Table.Cell className=\"col-connections\">\n                  {product.synced_with.length > 0 && (\n                    <ul className=\"woo-products\">\n                      {product.synced_with.map((wooProduct) => {\n                        return (\n                          <li\n                            key={`connectedProduct_${product.id}_${wooProduct.id}`}\n                          >\n                            <a href={wooProduct.permalink} target=\"_blank\">\n                              {/* <img\n                              src={wooProduct.thumbnail}\n                              alt={wooProduct.name}\n                            /> */}\n                              <h6>{wooProduct.name}</h6>\n                            </a>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  )}\n                  {product.synced_with.length === 0 ? (\n                    <Button\n                      size=\"default\"\n                      disabled={isLoading}\n                      color=\"blue\"\n                      className=\"connect-button-popup-opener connect\"\n                      variant=\"mutedOutline\"\n                      onClick={() => {\n                        setProductToConnect(product);\n                        getActivatorProps().onClick();\n                      }}\n                    >\n                      <Button.Icon\n                        as={AddCircle}\n                        size={20}\n                        mr={8}\n                      ></Button.Icon>\n                      <span>{i18n(\"Button.ConnectProducts\")}</span>\n                    </Button>\n                  ) : (\n                    <a\n                      href=\"#\"\n                      className=\"link connect-button-popup-opener edit\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setProductToConnect(product);\n                        getActivatorProps().onClick();\n                      }}\n                    >\n                      <Button.Icon as={Edit} size={16} mr={4}></Button.Icon>\n                      <span>{i18n(\"Button.EditConnectedProducts\")}</span>\n                    </a>\n                  )}\n                </Table.Cell>\n              </Table.Row>\n            ))}\n        </tbody>\n      </Table>\n      {productToConnect && (\n        <Modal\n          {...getModalProps()}\n          onClose={() => {\n            getModalProps().onClose();\n          }}\n          id=\"connector-popup\"\n          maxWidth=\"60%\"\n        >\n          <Modal.Header showCloseButton>\n            {i18n(\"Text.ConnectorPopupTitle\")} <br />\n            <small>\n              {productToConnect.name} — {productToConnect.discount} %\n            </small>\n          </Modal.Header>\n          <Modal.Content>\n            <ConnectorPopupContent\n              selectProduct={selectProduct}\n              selectAllAvailableProducts={selectAllAvailableProducts}\n              selection={selection}\n            />\n            <div className=\"modal-footer\">\n              <Button\n                className=\"cancel-button\"\n                variant=\"text\"\n                color=\"red\"\n                mr={20}\n                onClick={() => {\n                  getModalProps().onClose();\n                  setProductToConnect(null);\n                  updateSelection([]);\n                }}\n              >\n                {i18n(\"Button.Cancel\")}\n              </Button>\n              <Button\n                className=\"connect-button\"\n                onClick={connectProducts}\n                disabled={selection.length === 0}\n              >\n                {i18n(\"Button.Save\")}\n              </Button>\n            </div>\n          </Modal.Content>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default hot(ConnectedProductsTable);\n","import { hot } from \"react-hot-loader/root\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Banner, Button, Inline } from \"@sparkpost/matchbox\";\nimport Section from \"../components/Section\";\nimport { i18n, hasSetApiCredentials } from \"../utils/utils\";\nimport { useAppState } from \"../utils/context\";\nimport ConnectedProductsTable from \"../components/ConnectedProductsTable\";\nimport { CloudDownload, LinkOff, Search } from \"@sparkpost/matchbox-icons\";\nimport {\n  refreshProducts,\n  resyncProducts,\n  disconnectProducts,\n} from \"../utils/ajax\";\n\nconst Overview = () => {\n  const { fields, updateField, isLoading, setLoading, displayNotice } =\n    useAppState();\n  const [search, setSearch] = useState(\"\");\n\n  /**\n   * Refresh on first load.\n   */\n  useEffect(() => {\n    onRefreshClick();\n  }, []);\n\n  /**\n   * When connected products change, keep a flat list of Woo producst IDs.\n   */\n  useEffect(() => {\n    updateField(\n      \"connected_woo_products_ids\",\n      fields.connected_products\n        .map((p) => p.synced_with.map((pp) => pp.id).flat())\n        .flat()\n    );\n  }, [fields.connected_products]);\n\n  /**\n   * When refreshing the products list.\n   */\n  const onResyncClick = async (e = null) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    setLoading(true);\n    const result = await resyncProducts();\n\n    if (result.message) {\n      displayNotice(\n        result.message || result.error,\n        result.success ? \"success\" : \"error\"\n      );\n    }\n\n    if (result.fields) {\n      if (result.fields.connected_products) {\n        updateField(\"connected_products\", result.fields.connected_products);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  /**\n   * When refreshing the products list.\n   */\n  const onRefreshClick = async (e = null) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    setLoading(true);\n    const result = await refreshProducts();\n\n    if (result.message) {\n      displayNotice(\n        result.message || result.error,\n        result.success ? \"success\" : \"error\"\n      );\n    }\n\n    if (result.fields) {\n      if (result.fields.connected_products) {\n        updateField(\"connected_products\", result.fields.connected_products);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  /**\n   * When reseting all products' connections.\n   */\n  const onDisconnectAllClick = async (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n    const result = await disconnectProducts();\n\n    if (result.message) {\n      displayNotice(\n        result.message || result.error,\n        result.success ? \"success\" : \"error\"\n      );\n    }\n\n    if (result.fields) {\n      if (result.fields.connected_products) {\n        updateField(\"connected_products\", result.fields.connected_products);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  //=======================================================\n  //\n  //  #####    #####  ##     ##  ####    #####  #####\n  //  ##  ##   ##     ####   ##  ##  ##  ##     ##  ##\n  //  #####    #####  ##  ## ##  ##  ##  #####  #####\n  //  ##  ##   ##     ##    ###  ##  ##  ##     ##  ##\n  //  ##   ##  #####  ##     ##  ####    #####  ##   ##\n  //\n  //=======================================================\n\n  if (!hasSetApiCredentials(fields)) {\n    return (\n      <Section>\n        <Banner size=\"small\" status=\"warning\" onDismiss={() => {}}>\n          {i18n(\"Text.CredentialsMissing\")}\n        </Banner>\n      </Section>\n    );\n  }\n\n  return (\n    <>\n      <nav className=\"actions-bar\">\n        <Inline align=\"right\">\n          {fields.connected_products.length > 0 &&\n            fields.connected_products.filter((p) => p.synced_with.length > 0)\n              .length > 0 && (\n              <Button\n                size=\"small\"\n                variant=\"text\"\n                color=\"red\"\n                disabled={isLoading}\n                className=\"action-right\"\n                onClick={(e) =>\n                  window.confirm(i18n(\"Button.DisconnectAll?\")) &&\n                  onDisconnectAllClick(e)\n                }\n              >\n                <Button.Icon as={LinkOff} size={20} mr=\"200\"></Button.Icon>\n                {i18n(\"Text.DisconnectAllProducts\")}\n              </Button>\n            )}\n          <Button\n            size=\"small\"\n            variant=\"text\"\n            disabled={isLoading}\n            onClick={onResyncClick}\n          >\n            <Button.Icon as={CloudDownload} size={20} mr=\"200\"></Button.Icon>\n            {i18n(\"Button.SyncWithTMU\")}\n          </Button>\n        </Inline>\n      </nav>\n      <Section\n        className=\"connected-products\"\n        edgy={true}\n        title={i18n(\"Text.ConnectedProducts\")}\n      >\n        <div className=\"search-section action-right\">\n          <TextField\n            id=\"search\"\n            label={null}\n            placeholder={i18n(\"Field.SearchProducts\")}\n            name=\"search\"\n            value={search}\n            prefix={<Search size={24} />}\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n        </div>\n        <ConnectedProductsTable search={search} />\n      </Section>\n    </>\n  );\n};\n\nexport default hot(Overview);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport {\n  Button,\n  TextField,\n  Columns,\n  Column,\n  Checkbox,\n  Banner,\n} from \"@sparkpost/matchbox\";\nimport Section from \"../components/Section\";\nimport Debug from \"../components/Debug\";\nimport { i18n } from \"../utils/utils\";\nimport { saveFields } from \"../utils/ajax\";\nimport { useAppState } from \"../utils/context\";\n\nconst Settings = () => {\n  const { fields, updateField, setLoading, displayNotice } = useAppState();\n\n  const onApiCredentialsSaveClick = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    let result = null;\n\n    if (fields.api_environment === \"prod\") {\n      result = await saveFields({\n        api_environment: \"prod\",\n        api_client_id: fields.api_client_id,\n        api_password: fields.api_password,\n      });\n    } else if (fields.api_environment === \"beta\") {\n      result = await saveFields({\n        api_environment: \"beta\",\n        api_client_id_beta: fields.api_client_id_beta,\n        api_password_beta: fields.api_password_beta,\n      });\n    }\n\n    displayNotice(\n      result.message || result.error,\n      result.success ? \"success\" : \"error\"\n    );\n\n    if (result.fields && typeof result.fields.merchant_token !== \"undefined\") {\n      updateField(\"merchant_token\", result.fields.merchant_token);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Section title={i18n(\"Text.ApiCredentials\")}>\n        <Checkbox\n          id=\"api_environment\"\n          name=\"api_environment\"\n          checked={fields.api_environment === \"beta\"}\n          label={i18n(\"Field.EnvironmentCheckbox\")}\n          onChange={(e) => {\n            const value = e.target.checked ? \"beta\" : \"prod\";\n            updateField(\"api_environment\", value);\n            updateField(\"merchant_token\", null);\n          }}\n        />\n        {fields.api_environment === \"prod\" ? (\n          <p\n            className=\"section-intro\"\n            dangerouslySetInnerHTML={{\n              __html: i18n(\"Text.TextBeforeAPICreds\"),\n            }}\n          />\n        ) : (\n          <p\n            className=\"section-intro\"\n            dangerouslySetInnerHTML={{\n              __html: i18n(\"Text.TextBeforeAPICredsBeta\"),\n            }}\n          />\n        )}\n\n        <Columns>\n          {fields.api_environment === \"prod\" ? (\n            <>\n              <Column width={2 / 5}>\n                <TextField\n                  id=\"api_client_id\"\n                  label={i18n(\"Field.ClientID\")}\n                  placeholder={i18n(\"Field.ClientID\")}\n                  name=\"api_client_id\"\n                  value={fields.api_client_id}\n                  onChange={(e) => {\n                    updateField(e.target.name, e.target.value);\n                  }}\n                />\n              </Column>\n              <Column width={2 / 5}>\n                <TextField\n                  id=\"api_password\"\n                  label={i18n(\"Field.Password\")}\n                  placeholder={i18n(\"Field.Password\")}\n                  name=\"api_password\"\n                  value={fields.api_password}\n                  onChange={(e) => {\n                    updateField(e.target.name, e.target.value);\n                  }}\n                />\n              </Column>\n            </>\n          ) : (\n            <>\n              <Column width={2 / 5}>\n                <TextField\n                  id=\"api_client_id_beta\"\n                  label={`${i18n(\"Field.ClientID\")} (beta)`}\n                  placeholder={`${i18n(\"Field.ClientID\")} (beta)`}\n                  name=\"api_client_id_beta\"\n                  value={fields.api_client_id_beta}\n                  onChange={(e) => {\n                    updateField(e.target.name, e.target.value);\n                  }}\n                />\n              </Column>\n              <Column width={2 / 5}>\n                <TextField\n                  id=\"api_password_beta\"\n                  label={`${i18n(\"Field.Password\")} (beta)`}\n                  placeholder={`${i18n(\"Field.Password\")} (beta)`}\n                  name=\"api_password_beta\"\n                  value={fields.api_password_beta}\n                  onChange={(e) => {\n                    updateField(e.target.name, e.target.value);\n                  }}\n                />\n              </Column>\n            </>\n          )}\n          <Column className=\"align-bottom\">\n            <Button\n              size=\"default\"\n              width=\"100%\"\n              variant=\"outline\"\n              color=\"blue\"\n              disabled={\n                (fields.api_environment === \"prod\" &&\n                  (fields.api_client_id === \"\" ||\n                    fields.api_password === \"\")) ||\n                (fields.api_environment === \"beta\" &&\n                  (fields.api_client_id_beta === \"\" ||\n                    fields.api_password_beta === \"\"))\n              }\n              onClick={onApiCredentialsSaveClick}\n              mutedOutline\n            >\n              {i18n(\"Button.Save\")}\n            </Button>\n          </Column>\n        </Columns>\n        {fields.merchant_token ? (\n          <Banner mt=\"300\" size=\"small\" status=\"info\" onDismiss={() => {}}>\n            {i18n(\"Settings.ValidMerchantTokenIs\")}{\" \"}\n            <code>{fields.merchant_token}</code>\n          </Banner>\n        ) : (\n          <Banner mt=\"300\" size=\"small\" status=\"warning\" onDismiss={() => {}}>\n            {i18n(\"Settings.InvalidMerchantToken\")}\n          </Banner>\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default hot(Settings);\n","import { hot } from \"react-hot-loader/root\";\nimport React, { useEffect } from \"react\";\nimport { CodeBlock, Snackbar } from \"@sparkpost/matchbox\";\n\nconst Debug = (props) => {\n  return <CodeBlock dark code={JSON.stringify(props, undefined, 2)} />;\n};\n\nexport default hot(Debug);\n","import { hot } from \"react-hot-loader/root\";\nimport React, { useEffect } from \"react\";\nimport { Tabs as MatchboxTabs, useTabs } from \"@sparkpost/matchbox\";\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport { i18n } from \"../utils/utils\";\nimport { Overview, Settings } from \"../tabs\";\nimport { useAppState } from \"../utils/context\";\n\nconst tabsList = [\n  { title: i18n(\"Tabs.Overview\"), component: Overview, slug: \"overview\" },\n  { title: i18n(\"Tabs.Settings\"), component: Settings, slug: \"settings\" },\n];\n\nconst initialTabIndex =\n  tabsList.findIndex((tab) => tab.slug === window.TrustMeUp.data.current_tab) ||\n  0;\n\nconst Tabs = () => {\n  const { hideNotice } = useAppState();\n\n  const { tabIndex, setTabIndex, tabs } = useTabs({\n    tabs: tabsList.map((tab) => ({\n      content: tab.title,\n    })),\n  });\n\n  useEffect(() => {\n    setTabIndex(initialTabIndex);\n  }, []);\n\n  const onTabSelect = (tabIndex) => {\n    setTabIndex(tabIndex);\n    hideNotice();\n  };\n\n  return (\n    <>\n      <nav className=\"plugin-tabs\">\n        <MatchboxTabs\n          selected={tabIndex}\n          tabs={tabs}\n          onSelect={onTabSelect}\n          fitted\n        />\n      </nav>\n\n      {tabsList.map((tab, i) => {\n        if (i !== tabIndex) {\n          return null;\n        }\n\n        const TabContent = tab.component;\n\n        return (\n          <div className=\"tab-content\" key={`tabContent${i}`}>\n            <TabContent />\n            <LoadingIndicator />\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default hot(Tabs);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport { ThemeProvider } from \"@sparkpost/matchbox\";\n\nimport { ContextContainer } from \"./utils/context\";\nimport Header from \"./components/Header\";\nimport Tabs from \"./components/Tabs\";\n\nconst AdminPage = () => {\n  return (\n    <ThemeProvider>\n      <ContextContainer>\n        <div className=\"wrap\">\n          <Header />\n          <div className=\"admin-page-core-content\">\n            <Tabs />\n          </div>\n        </div>\n      </ContextContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default hot(AdminPage);\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport AdminPage from \"./src/AdminPage\";\n\n/**\n * Render the WP Mail Pro admin page.\n */\nif (document.querySelector(\"#tmu-admin-page-container\")) {\n  const renderAdminPage = () => {\n    render(<AdminPage />, document.querySelector(\"#tmu-admin-page-container\"));\n  };\n\n  document.addEventListener(\"DOMContentLoaded\", renderAdminPage);\n}\n"],"sourceRoot":""}